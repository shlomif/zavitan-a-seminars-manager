#!/usr/bin/perl -w

# This is meant to suppress these annoying "subroutine redefined" warnings
no warnings "redefine";

use strict;

use CGI;

use DBI;

use Technion::Seminars::Config;
use Technion::Seminars::Layout;
use Technion::Seminars::SlashUrl;
use Technion::Seminars::UserMan;
use Technion::Seminars::TypeMan;
use Technion::Seminars::DBI;

use Gamla::TextStream::Out::File;

my $q = CGI->new();

sub check_url
{
    my $url = shift;

    my $verdict = ($url =~ /^admin\/clubs\/(\w+\/(((subjects\/(\w+\/)?)|(seminars\/([^\/]+\/))))?)?/) ? 1 : 0;
    
    return ($verdict, "admin/clubs/");
}

# Make sure our URL ends with a slash.
my $base_url = &normalize_url($q, \&check_url, "https");

my (%cookie);
my ($user, $password);
my $admin_level = "readonly";

my $user_man = Technion::Seminars::UserMan->new();

if (%cookie = $q->cookie('seminars_auth'))
{
    $user = $cookie{'user'};
    $password = $cookie{'password'};

    $admin_level = $user_man->get_admin_level($user, $password);
}

print $q->header();

my $title = "Club Management";

my $base_url_wo_last_component = $base_url;
$base_url_wo_last_component =~ s/\/[^\/]*$//;

my $layout = 
    Technion::Seminars::Layout->new(
        'path' => $base_url_wo_last_component,
        'title' => $title,
        'admin_level' => $admin_level,
    );

my $o = Gamla::TextStream::Out::File->new(\*STDOUT);

my $draw_page = sub {


    
};

$layout->render($o, $draw_page);
